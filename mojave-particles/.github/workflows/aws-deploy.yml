name: Deploy to AWS

on:
  push:
    branches: [main]
    paths: ['mojave-particles/**']
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  NODE_VERSION: '18'
  WORKING_DIRECTORY: './mojave-particles'

jobs:
  deploy:
    name: Build and Deploy to AWS
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.WORKING_DIRECTORY }}/package-lock.json'
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
          
      - name: Install Dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci --legacy-peer-deps
        
      - name: Run Linting
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run lint
        
      - name: Build for Production
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run build:prod
        
      - name: Deploy to AWS
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
          AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
          CUSTOM_DOMAIN: ${{ secrets.CUSTOM_DOMAIN }}
        run: node aws-deploy.js
        
      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            ðŸš€ Automated deployment to AWS
            
            **Deployed Changes:**
            ${{ github.event.head_commit.message }}
            
            **Plugin URL:** ${{ secrets.CUSTOM_DOMAIN && format('https://{0}', secrets.CUSTOM_DOMAIN) || format('https://{0}.cloudfront.net', secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID) }}
            
            **Build Info:**
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}
            - Build: #${{ github.run_number }}
          draft: false
          prerelease: false
          
      - name: Deployment Summary
        run: |
          echo "ðŸŽ‰ Deployment completed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Plugin URLs:**" >> $GITHUB_STEP_SUMMARY
          echo "- S3: https://${{ secrets.AWS_S3_BUCKET }}.s3.${{ secrets.AWS_REGION || 'us-east-1' }}.amazonaws.com" >> $GITHUB_STEP_SUMMARY
          echo "- CloudFront: https://${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}.cloudfront.net" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ secrets.CUSTOM_DOMAIN }}" ]; then
            echo "- Custom: https://${{ secrets.CUSTOM_DOMAIN }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**To use in Framer:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Open Framer" >> $GITHUB_STEP_SUMMARY
          echo "2. Go to Plugins â†’ Developer Tools" >> $GITHUB_STEP_SUMMARY
          echo "3. Load plugin URL (use Custom Domain or CloudFront URL)" >> $GITHUB_STEP_SUMMARY 