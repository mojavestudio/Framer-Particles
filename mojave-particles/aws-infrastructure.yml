AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Infrastructure for Mojave Particles Plugin - S3 + CloudFront + SSL'

Parameters:
  BucketName:
    Type: String
    Default: mojave-particles-plugin
    Description: Name for the S3 bucket hosting the plugin files
    
  DomainName:
    Type: String
    Default: ''
    Description: Custom domain name (optional, e.g., particles.yourdomain.com)
    
  CertificateArn:
    Type: String
    Default: ''
    Description: ACM Certificate ARN for custom domain (must be in us-east-1)

Conditions:
  HasCustomDomain: !Not [!Equals [!Ref DomainName, '']]
  HasCertificate: !Not [!Equals [!Ref CertificateArn, '']]

Resources:
  # S3 Bucket for hosting plugin files
  PluginBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicReadOnly: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins: 
              - 'https://framer.com'
              - 'https://*.framer.com'
              - 'https://localhost:*'
              - 'https://127.0.0.1:*'
            AllowedMethods: [GET, HEAD]
            AllowedHeaders: ['*']
            MaxAge: 3600

  # S3 Bucket Policy for public read access
  PluginBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PluginBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub '${PluginBucket}/*'
            
  # CloudFront Origin Access Control
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${BucketName}-oac'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: S3Origin
            DomainName: !Sub '${PluginBucket}.s3.${AWS::Region}.amazonaws.com'
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !Ref OriginAccessControl
        Enabled: true
        Comment: !Sub 'CloudFront distribution for ${BucketName}'
        DefaultRootObject: index.html
        Aliases: !If
          - HasCustomDomain
          - [!Ref DomainName]
          - !Ref 'AWS::NoValue'
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD, OPTIONS]
          CachedMethods: [GET, HEAD]
          Compress: true
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # CachingOptimized
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf  # CORS-S3Origin
          ResponseHeadersPolicyId: 5cc3b908-e619-4b99-88e5-2cf7f45965bd  # CORS-With-Preflight
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        ViewerCertificate: !If
          - HasCertificate
          - AcmCertificateArn: !Ref CertificateArn
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1.2_2021
          - CloudFrontDefaultCertificate: true
        PriceClass: PriceClass_100  # Use only North America and Europe

Outputs:
  BucketName:
    Description: 'S3 Bucket Name'
    Value: !Ref PluginBucket
    Export:
      Name: !Sub '${AWS::StackName}-bucket-name'
      
  BucketWebsiteURL:
    Description: 'S3 Website URL'
    Value: !Sub 'https://${PluginBucket}.s3-website.${AWS::Region}.amazonaws.com'
    Export:
      Name: !Sub '${AWS::StackName}-bucket-url'
      
  CloudFrontDistributionId:
    Description: 'CloudFront Distribution ID'
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub '${AWS::StackName}-distribution-id'
      
  CloudFrontDomainName:
    Description: 'CloudFront Domain Name'
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-cloudfront-domain'
      
  PluginURL:
    Description: 'Plugin URL to use in Framer'
    Value: !If
      - HasCustomDomain
      - !Sub 'https://${DomainName}'
      - !Sub 'https://${CloudFrontDistribution.DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-plugin-url' 