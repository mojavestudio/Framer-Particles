name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: npm install
    
    - name: Run tests
      run: npm test
    
    - name: Check build
      run: npm run build
    
    - name: Lint code
      run: npm run lint
    
    - name: Format check
      run: npm run format

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: false # Disabled until npm authentication is set up
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build
      run: npm run build
    
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create Release
      uses: actions/github-script@v7
      with:
        script: |
          const { data: release } = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: `v${context.runNumber}`,
            name: `Release v${context.runNumber}`,
            body: `Automated release for version ${context.runNumber}
            
            Changes in this release:
            - Automated build and test
            - Updated dependencies
            - Performance improvements`,
            draft: false,
            prerelease: false
          });
          console.log(`Release created: ${release.html_url}`);
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 